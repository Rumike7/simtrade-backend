DROP DATABASE IF EXISTS simtrade_db;

DO $$ 
BEGIN
   IF NOT EXISTS (SELECT FROM pg_database WHERE datname = 'simtrade_db') THEN
      PERFORM dblink_exec('dbname=postgres', 'CREATE DATABASE simtrade_db');
   END IF;
END $$;

-- Connect to the new database
\connect simtrade_db

-- Enable TimescaleDB extension
CREATE EXTENSION IF NOT EXISTS timescaledb;

//timescaledb=Dockerfile

FROM timescale/timescaledb:latest-pg16

# Copy the initialization script
COPY ./sql/init-db.sql /docker-entrypoint-initdb.d/init-db.sql



-- Example: Convert 'users' to a hypertable (if using TimescaleDB features)
-- SELECT create_hypertable('users', 'created_at', if_not_exists => TRUE);

//application.yml

spring:
  application:
    name: common
  server:
    port: 8080
  datasource:
    url: jdbc:postgresql://timescaledb:5432/simtrade_db
    username: rumike
    password: do0rdie
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        default_schema: public
  flyway:
    enabled: true
    locations: classpath:db/migration

  cloud:
    gateway:
      routes:
        - id: public-api
          uri: http://public-service:8080
          predicates:
            - Path=/api/**
          filters:
            - name: ApiKeyGatewayFilter


jwt:
  secret: fqU9JzNw9mRv0jRg5UZdg08SOunqfS406ReqAsIKpPCwk0UVyU0TNHlCIVrBfj8tUlwi2paaTXq8I2FdN1a6HA==
  expiration: 864000000

logging:
  level:
    com.simtrade.market_service: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: INFO

market:
  service:
    url: http://localhost:8082

user:
  service:
    url: http://localhost:8081

order:
  service:
    url: http://localhost:8083

api:
 key: Simtrade

//User.java

package com.simtrade.user_service.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import jakarta.persistence.*;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.Map;

import com.simtrade.common.enums.Trustable;

@Entity
@Table(name = "users")
@Data
@NoArgsConstructor
@AllArgsConstructor
public class User  implements AccountHolder{
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(unique = true, nullable = false)
    private String email;

    @Column(nullable = false)
    private String password;

    private String firstName;
    private String lastName;

    @Column(nullable = false)
    private BigDecimal balance = BigDecimal.ZERO;

    @Column(nullable = false)
    private BigDecimal totalDeposits = BigDecimal.ZERO;


    @ElementCollection
    @MapKeyColumn(name = "symbol")
    @Column(name = "quantity")
    @CollectionTable(name = "user_portfolio", joinColumns = @JoinColumn(name = "user_id"))
    private Map<String, BigDecimal> portfolio = new HashMap<>();

    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private Role role = Role.GUEST;

    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private Trustable trustable = Trustable.C;

    @Column(nullable = false)
    private BigDecimal interestRate = BigDecimal.ONE.negate();

    @Column(nullable = false)
    private BigDecimal startWeekAmount = BigDecimal.ZERO;
    

    public static enum Role {
        USER, ADMIN, MODERATOR, ANALYST, GUEST, PREMIUM_USER, TESTER
    }
}C:\Users\fati\Documents\GitHub\simtrade-backend>docker ps -a

CONTAINER ID   IMAGE                             COMMAND                  CREATED                  STATUS                        PORTS     NAMES

6e833f991375   simtrade-backend-user-service     "java -jar user_serv…"   Less than a second ago   Exited (143) 29 seconds ago             simtrade-backend-user-service-1

eb0c1d077046   simtrade-backend-market-service   "java -jar market_se…"   Less than a second ago   Exited (143) 29 seconds ago             simtrade-backend-market-service-1

a75b69ef47fb   simtrade-backend-order-service    "java -jar order_ser…"   Less than a second ago   Exited (143) 29 seconds ago             simtrade-backend-order-service-1

75ce876b1f00   simtrade-builder                  "/usr/local/bin/mvn-…"   Less than a second ago   Exited (0) 2 minutes ago                simtrade-backend-builder-1

11103c28b252   simtrade-backend-timescaledb      "docker-entrypoint.s…"   Less than a second ago   Exited (0) 28 seconds ago               simtrade-backend-timescaledb-1

C:\Users\fati\Documents\GitHub\simtrade-backend>docker start 11103c28b252

11103c28b252

C:\Users\fati\Documents\GitHub\simtrade-backend>docker exec -it simtrade-backend-timescaledb-1 psql -U rumike -d postgres

psql (16.9)

Type "help" for help.

postgres=# \dt

Did not find any relations.

postgres=#